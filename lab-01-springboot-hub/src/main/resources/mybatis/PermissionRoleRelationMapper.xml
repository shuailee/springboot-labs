<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.klein.dao.mapper.PermissionRoleRelationMapper">
  <resultMap id="BaseResultMap" type="com.klein.dao.model.PermissionRoleRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="permission_id" jdbcType="INTEGER" property="permissionId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_user" jdbcType="VARCHAR" property="updatedUser" />
    <result column="created_user" jdbcType="VARCHAR" property="createdUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, tenant_id, permission_id, role_id, status, is_deleted, updated_time, created_time, 
    updated_user, created_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from permission_role_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from permission_role_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.klein.dao.model.PermissionRoleRelation">
    insert into permission_role_relation (id, tenant_id, permission_id, 
      role_id, status, is_deleted, 
      updated_time, created_time, updated_user, 
      created_user)
    values (#{id,jdbcType=BIGINT}, #{tenantId,jdbcType=VARCHAR}, #{permissionId,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{isDeleted,jdbcType=BIT}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedUser,jdbcType=VARCHAR}, 
      #{createdUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.klein.dao.model.PermissionRoleRelation">
    insert into permission_role_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedUser != null">
        updated_user,
      </if>
      <if test="createdUser != null">
        created_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUser != null">
        #{updatedUser,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.klein.dao.model.PermissionRoleRelation">
    update permission_role_relation
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUser != null">
        updated_user = #{updatedUser,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        created_user = #{createdUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.klein.dao.model.PermissionRoleRelation">
    update permission_role_relation
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      permission_id = #{permissionId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_user = #{updatedUser,jdbcType=VARCHAR},
      created_user = #{createdUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.klein.dao.model.PermissionRoleRelation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="permission_id" jdbcType="INTEGER" property="permissionId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_user" jdbcType="VARCHAR" property="updatedUser" />
    <result column="created_user" jdbcType="VARCHAR" property="createdUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, tenant_id, permission_id, role_id, status, is_deleted, updated_time, created_time, 
    updated_user, created_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from permission_role_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from permission_role_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.klein.dao.model.PermissionRoleRelation">
    insert into permission_role_relation (id, tenant_id, permission_id, 
      role_id, status, is_deleted, 
      updated_time, created_time, updated_user, 
      created_user)
    values (#{id,jdbcType=INTEGER}, #{tenantId,jdbcType=VARCHAR}, #{permissionId,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{isDeleted,jdbcType=BIT}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedUser,jdbcType=VARCHAR}, 
      #{createdUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.klein.dao.model.PermissionRoleRelation">
    insert into permission_role_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedUser != null">
        updated_user,
      </if>
      <if test="createdUser != null">
        created_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUser != null">
        #{updatedUser,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.klein.dao.model.PermissionRoleRelation">
    update permission_role_relation
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUser != null">
        updated_user = #{updatedUser,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        created_user = #{createdUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.klein.dao.model.PermissionRoleRelation">
    update permission_role_relation
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      permission_id = #{permissionId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_user = #{updatedUser,jdbcType=VARCHAR},
      created_user = #{createdUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>